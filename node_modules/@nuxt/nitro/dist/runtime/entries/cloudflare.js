"use strict";

require("#polyfill");

var _kvAssetHandler = require("@cloudflare/kv-asset-handler");

var _ufo = require("ufo");

var _server = require("../server");

var _utils = require("../server/utils");

var _paths = require("#paths");

addEventListener("fetch", event => {
  event.respondWith(handleEvent(event));
});

async function handleEvent(event) {
  try {
    return await (0, _kvAssetHandler.getAssetFromKV)(event, {
      cacheControl: assetsCacheControl,
      mapRequestToAsset: baseURLModifier
    });
  } catch (_err) {}

  const url = new URL(event.request.url);
  let body;

  if ((0, _utils.requestHasBody)(event.request)) {
    body = await (0, _utils.useRequestBody)(event.request);
  }

  const r = await (0, _server.localCall)({
    event,
    url: url.pathname + url.search,
    host: url.hostname,
    protocol: url.protocol,
    headers: event.request.headers,
    method: event.request.method,
    redirect: event.request.redirect,
    body
  });
  return new Response(r.body, {
    headers: r.headers,
    status: r.status,
    statusText: r.statusText
  });
}

function assetsCacheControl(request) {
  if (request.url.startsWith((0, _paths.buildAssetsURL)())) {
    return {
      browserTTL: 31536e3,
      edgeTTL: 31536e3
    };
  }

  return {};
}

const baseURLModifier = request => {
  const url = (0, _ufo.withoutBase)(request.url, (0, _paths.baseURL)());
  return (0, _kvAssetHandler.mapRequestToAsset)(new Request(url, request));
};