"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stack = exports.localFetch = exports.localCall = exports.handle = exports.$fetch = void 0;

var _h = require("h3");

var _ohmyfetch = require("ohmyfetch");

var _destr = _interopRequireDefault(require("destr"));

var _index = require("unenv/runtime/fetch/index");

var _paths = require("../app/paths");

var _timing = require("./timing");

var _error = require("./error");

var _serverMiddleware = _interopRequireDefault(require("#server-middleware"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const app = (0, _h.createApp)({
  debug: (0, _destr.default)(process.env.DEBUG),
  onError: _error.handleError
});
app.use(_timing.timingMiddleware);
app.use(_serverMiddleware.default);
app.use(() => Promise.resolve().then(() => require("../app/render")).then(e => e.renderMiddleware), {
  lazy: true
});
const stack = app.stack;
exports.stack = stack;
const handle = (0, _h.useBase)((0, _paths.baseURL)(), app);
exports.handle = handle;
const localCall = (0, _index.createCall)(handle);
exports.localCall = localCall;
const localFetch = (0, _index.createFetch)(localCall, globalThis.fetch);
exports.localFetch = localFetch;
const $fetch = (0, _ohmyfetch.createFetch)({
  fetch: localFetch,
  Headers: _ohmyfetch.Headers
});
exports.$fetch = $fetch;
globalThis.$fetch = $fetch;