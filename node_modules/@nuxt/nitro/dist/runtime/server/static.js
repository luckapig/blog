"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
module.exports = serveStatic;

var _h = require("h3");

var _ufo = require("ufo");

var _static = require("#static");

var _paths = require("#paths");

const METHODS = ["HEAD", "GET"];
const TWO_DAYS = 2 * 60 * 60 * 24;
const STATIC_ASSETS_BASE = process.env.NUXT_STATIC_BASE + "/" + process.env.NUXT_STATIC_VERSION;

async function serveStatic(req, res) {
  if (!METHODS.includes(req.method)) {
    return;
  }

  let id = (0, _ufo.withLeadingSlash)((0, _ufo.withoutTrailingSlash)((0, _ufo.parseURL)(req.url).pathname));
  let asset = (0, _static.getAsset)(id);

  if (!asset) {
    const _id = id + "/index.html";

    const _asset = (0, _static.getAsset)(_id);

    if (_asset) {
      asset = _asset;
      id = _id;
    }
  }

  const isBuildAsset = id.startsWith((0, _paths.buildAssetsDir)());

  if (!asset) {
    if (isBuildAsset && !id.startsWith(STATIC_ASSETS_BASE)) {
      throw (0, _h.createError)({
        statusMessage: "Cannot find static asset " + id,
        statusCode: 404
      });
    }

    return;
  }

  const ifNotMatch = req.headers["if-none-match"] === asset.etag;

  if (ifNotMatch) {
    res.statusCode = 304;
    return res.end("Not Modified (etag)");
  }

  const ifModifiedSinceH = req.headers["if-modified-since"];

  if (ifModifiedSinceH && asset.mtime) {
    if (new Date(ifModifiedSinceH) >= new Date(asset.mtime)) {
      res.statusCode = 304;
      return res.end("Not Modified (mtime)");
    }
  }

  if (asset.type) {
    res.setHeader("Content-Type", asset.type);
  }

  if (asset.etag) {
    res.setHeader("ETag", asset.etag);
  }

  if (asset.mtime) {
    res.setHeader("Last-Modified", asset.mtime);
  }

  if (isBuildAsset) {
    res.setHeader("Cache-Control", `max-age=${TWO_DAYS}, immutable`);
  }

  const contents = await (0, _static.readAsset)(id);
  return res.end(contents);
}