declare type Matcher<T> = (value: T) => boolean;
declare type Pattern = string | RegExp;
declare type AllowRejectOptions = Partial<{
    accept: Pattern | Pattern[];
    reject: Pattern | Pattern[];
}>;
declare type AllowlistOptions<T = any> = AllowRejectOptions | Pattern | Pattern[] | Matcher<T>;
declare function allowList<T = any>(options: AllowlistOptions<T>, ignorecase?: boolean): Matcher<T>;

export { AllowRejectOptions, AllowlistOptions, Matcher, Pattern, allowList };
